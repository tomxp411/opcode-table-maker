"imm","Immediate","#$12","Value is supplied in the program stream"
"abs","Absolute","$1234","Data is at this address."
"abs,X","Absolute X Indexed","$1234,X","Address is offset by X. If X=2 this is $1236."
"abs,Y","Absolute Y Indexed","$1234,Y","Address is offset by X. If Y=2 this is $1236."
"dir","Direct","$12","Direct Page address. Operand is 1 byte."
"dir,X","Direct X Indexed","$12,X","Address on Direct Page is offset by .X"
"dir,Y","Direct Y Indexed","$12,Y","Address on Direct Page is offset by .Y"
"(dir)","Direct Indirect","($12)","Value at $12 is a 16-bit address."
"(dir),Y","Direct Indirect Y Indexed","($12),Y","Resolve pointer at $12 then offset by Y."
"(dir,X)","Direct X Indexed Indirect","($12,X)","Start at $12, offset by X, then read that address."
"[dir]","Direct Indirect Long","[$12]","24 bit pointer on Direct Page."
"[dir],Y","Direct Indrect Long Y Indexed","[$12],Y","Resolve address at $12, then offset by Y."
"(abs)","Indirect","($1234)","Read pointer at $1234 and get data from the resultant address"
"(abs,X)","Indirect X Indexed","($1234,X)","Read pointer at $1234 offset by X, get data from resultant address"
"[abs]","Indirect Long","[$1234]","Pointer is a 24-bit address."
"long","Absolute Long","$123456","24 bit address."
"long,X","Absolute Indexed Long","$123456,X","24 bit address, offset by X."
"stk,S","Stack Relative Indexed","$12,S","Stack relative."
"(stk,S),Y","Stack Relative Indirect Indexed","($12,S),Y","Resolve Pointer at $12, then offset by Y."
"acc","Accumulator (implied)",,"Operation acts on .A"
"imp","Implied",,"Target is part of the opcode name."
"rel8","Relative Address (8 bit signed)","$1234","Branches can only jump by -128 to 127 bytes."
"rel16","16 bit relative address","1234","BRL can jump by 32K bytes."
"src,dest","Block Move","#$12,#$34","Operands are the bank numbers for block move/copy."
